# Generated by Django 2.2.13 on 2020-06-26 20:53

from django.db import migrations, models
import django.db.models.deletion

# This migration will remove the default='H' kwarg from the `coordinate_acquisition_code` field
# definition on ActivitySubmission. This default 'H' value is used when creating a new
# ActivitySubmission and the coordinate_acquisition_code is not set. The logic below details how to
# fix (as best as possible) the well's correct value of coordinate_acquisition_code:

# LEGACY:
#   - if LEGACY submission coordinate_acquisition_code is H then check well (only if this well has
#     no other submissions) to see what the value of coordinate_acquisition_code is:
#       - if LEGACY and well match (NOT NULL) = ok
#       - if LEGACY = H (default H) and well is NULL then well should have been defaulted to H = ok
# CON
#   - always default to H = ok
# ALT & DEC:
#   - new submission (default to H = ok)
#   - existing submission (well_tag_number exists in payload):
#       - if new coords and coordinate_acquisition_code is H (possible default to H = ok)
#       - if new coords and coordinate_acquisition_code is !H (set by sub = ok)
#       - if no coords and coordinate_acquisition_code is H  (default to H = bad?)
#       - if no coords and coordinate_acquisition_code is !H  (set by sub = ok)
# STAFF_EDIT:
#   - if coordinate_acquisition_code is given then store (no default H = ok)
#   - if coordinate_acquisition_code is _not_ given yes new coords (default to H = ok)
#   - if coordinate_acquisition_code is _not_ given no new coords (default to H = bad)

# Shows well submission history for wells that have had a H coordinate_acquisition_code sub but then filter out all the default-H subs to view only the actual updates
WELLS_WITH_H_SUBMISSION_HISTORY = """
SELECT act.well_activity_code, act.well_tag_number, act.filing_number, act.coordinate_acquisition_code, fp.coordinate_acquisition_code AS user_set, act.create_user, act.create_date
FROM activity_submission act
LEFT JOIN fields_provided fp ON act.filing_number = fp.filing_number
WHERE
    well_tag_number IN (
        SELECT well_tag_number
        FROM activity_submission
        WHERE
            coordinate_acquisition_code = 'H'
        GROUP BY well_tag_number
    )
    AND fp.coordinate_acquisition_code = true
ORDER BY well_tag_number, create_date;
"""

# Finds the wells which have had a default-'H' submission order by the number of times they have had a non-H submission showing only those which have had more then 1 sub
WELLS_WITH_MORE_THEN_ONE_H_SUBMISSION = """
SELECT COUNT(act.well_tag_number) AS num, act.well_tag_number
FROM activity_submission act
LEFT JOIN fields_provided fp ON act.filing_number = fp.filing_number
WHERE
    well_tag_number IN (
        SELECT well_tag_number
        FROM activity_submission
        WHERE
            coordinate_acquisition_code = 'H'
        GROUP BY well_tag_number
    )
    AND fp.coordinate_acquisition_code = true
GROUP BY act.well_tag_number
HAVING COUNT(act.well_tag_number) > 1
ORDER BY num DESC, well_tag_number;
"""

# Shows latest submission for a well that has a non-default-H submission
LATEST_REAL_STAFF_EDIT_OF_COORDINATE_ACQUISITION_CODE = """
SELECT act.well_activity_code, act.well_tag_number, act.filing_number, act.coordinate_acquisition_code, act.create_user, act.create_date
FROM well w
INNER JOIN activity_submission act ON act.well_tag_number = w.well_tag_number
WHERE
    act.filing_number = (
        SELECT MAX(act2.filing_number) AS recent_filing_number
        FROM activity_submission act2
        LEFT JOIN fields_provided fp ON act2.filing_number = fp.filing_number
        WHERE
            act2.well_tag_number = w.well_tag_number AND
            act2.well_activity_code = 'STAFF_EDIT' AND
            fp.coordinate_acquisition_code = true
    )
    AND w.coordinate_acquisition_code != act.coordinate_acquisition_code
ORDER BY well_tag_number;
""" # ~275 records


# Shows any ALT or DEC sub with an H coordinate_acquisition_code with no new geom
WELLS_WITH_DEFAULT_H_ALT_OR_DEC = """
SELECT act.well_activity_code, act.well_tag_number, act.filing_number, act.coordinate_acquisition_code, fp.coordinate_acquisition_code AS user_set, act.geom IS NOT NULL AS geom_changed, act.create_user, act.create_date
FROM activity_submission act
LEFT JOIN fields_provided fp ON act.filing_number = fp.filing_number
WHERE
    well_tag_number IN (
        SELECT well_tag_number
        FROM activity_submission
        WHERE
            well_activity_code IN ('DEC', 'ALT') AND
            coordinate_acquisition_code = 'H' AND
            geom IS NULL
    )
ORDER BY well_tag_number, create_date;
"""


# Count wells that had a ALT or DEC sub where it no new geom and coordinate_acquisition_code = 'H' = DEC sub always set default-H
NUM_WELLS_WITH_DEFAULT_H_ALT_OR_DEC = """
SELECT COUNT(well_tag_number), well_activity_code
FROM activity_submission
WHERE
    well_activity_code IN ('DEC', 'ALT') AND
    coordinate_acquisition_code = 'H' AND
    geom IS NULL
GROUP BY well_activity_code;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('wells', '0116_not_null_well_class_and_intended_water_use_20200619_2053'),
    ]

    operations = [
        migrations.AlterField(
            model_name='activitysubmission',
            name='coordinate_acquisition_code',
            field=models.ForeignKey(blank=True, db_column='coordinate_acquisition_code', null=True, on_delete=django.db.models.deletion.PROTECT, to='wells.CoordinateAcquisitionCode', verbose_name='Location Accuracy Code'),
        ),
    ]
